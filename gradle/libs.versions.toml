[versions]
compileSdk = "33"
minSdk = "21"
targetSdk = "33"

kotlin = "1.7.20"
workManager = "2.7.1"
lifecycle = "2.5.1"
composeBom = "2022.12.00"
composeCompiler = "1.3.2"
coroutines = "1.6.4"
firebase = "29.1.0"
hilt = "2.43.2"
hiltJetpack = "1.0.0"
retrofit = "2.9.0"
espresso = "3.4.0"
mockito = "4.3.1"
ktor = "2.0.1"
sqlDelight = "1.5.4"

[libraries]
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
core = { module = "androidx.core:core-ktx", version = "1.9.0" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version = "1.0.0" }
appcompat = { module = "androidx.appcompat:appcompat", version = "1.5.1" }
activityCompose = { module = "androidx.activity:activity-compose", version = "1.3.1" }
navigationCompose = { module = "androidx.navigation:navigation-compose", version = "2.5.2" }
material = "com.google.android.material:material:1.4.0"
timber = { module = "com.jakewharton.timber:timber", version = "5.0.1" }
inject = { module = "javax.inject:javax.inject", version = "1" }
junit = { module = "junit:junit", version = "4.13.2" }
truth = { module = "com.google.truth:truth", version = "1.1.3" }
coreTesting = { module = "androidx.arch.core:core-testing", version = "2.1.0" }
robolectric = { module = "org.robolectric:robolectric", version = "4.7.3" }

workManagar-runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "workManager" }
workManagar-testing = { module = "androidx.work:work-testing", version.ref = "workManager" }

lifecycle-liveData = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }

compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-uiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-material = { module = "androidx.compose.material:material" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-UiTestJunit = { module = "androidx.compose.ui:ui-test-junit4" }
compose-UiTestManifest = { module = "androidx.compose.ui:ui-test-manifest" }

coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }

hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-androidCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltJetpack" }
hilt-workManager = { module = "androidx.hilt:hilt-work", version.ref = "hiltJetpack" }
hilt-navigationCompose = { module = "androidx.hilt:hilt-navigation-compose", version = "1.0.0" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logback = { module = "ch.qos.logback:logback-classic", version = "1.2.11" }
ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

androidxTest-core = { module = "androidx.test:core", version = "1.0.0" }
androidxTest-runner = { module = "androidx.test:runner", version = "1.1.0" }
androidxTest-rules = { module = "androidx.test:rules", version = "1.1.0" }

espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espresso" }

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }

dexMaker = { module = "com.linkedin.dexmaker:dexmaker-mockito-inline", version = "2.25.1" }

sqlDelight-driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-coroutines = { module = "com.squareup.sqldelight:coroutines-extensions-jvm", version.ref = "sqlDelight" }

plugin-android = { module = "com.android.tools.build:gradle", version = "8.0.0-alpha10" }
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-dagger = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
plugin-googleServices = { module = "com.google.gms:google-services", version = "4.3.10" }
plugin-firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics-gradle", version = "2.8.1" }
plugin-sqlDelight = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqlDelight" }

[bundles]
ktor = ["ktor-core", "ktor-okhttp", "ktor-logging", "ktor-contentNegotiation", "ktor-serialization", "ktor-logback"]
espresso = ["espresso-core", "espresso-intents"]